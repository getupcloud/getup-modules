#!/usr/bin/env python

import os
import sys
import hcl2

_help = '-h' in sys.argv or '--help' in sys.argv
if len(sys.argv) < 2 or _help:
    print(f"Usage {sys.argv[0]} cluster-flavor [versions.tf...] ", file=sys.stderr)
    sys.exit(0 if _help else 1)

try:
    cluster_flavor, version_files = sys.argv[1], sys.argv[2:]
except IndexError:
    cluster_flavor = sys.argv[1]
    version_files = []

print(f'# File auto-generated from {sys.argv[0]}\n')

seen=set()
print('''terraform {
  required_version = "~> 1.7.0"''')

try:
    with open(os.path.join('examples', cluster_flavor, 'backend.txt'), 'rt') as f:
        print()
        print(''.join([ f'  {line}' for line in f.readlines()]), end='')
except FileNotFoundError as err:
    print(err)
    pass

print('''
  required_providers {''', end='')

tpl='''
    {name} = {{
      source  = "{source}"
      version = "{version}"
    }}'''

for v in version_files:
    with open(v, 'r') as f:
        hcl = hcl2.api.load(f)
        try:
            for k, v in hcl['terraform'][0]['required_providers'][0].items():
                if k not in seen:
                    name, source, version = k, v['source'], v['version']
                    print(tpl.format(name=name, source=source, version=version))
                    seen.add(k)

        except (IndexError, KeyError) as ex:
            pass
        #print(json.dumps(hcl))

print('''  }
}''')
