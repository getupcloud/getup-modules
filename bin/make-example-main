#!/usr/bin/env python

import os
import sys
import hcl2
import json

if len(sys.argv) < 4:
    print(f"Usage {sys.argv[0]} cluster-flavor module-name module-version", file=sys.stderr)
    sys.exit(1)

cluster_flavor, module_name, tag = sys.argv[1:4]
hcl = hcl2.api.load(sys.stdin)
config = {}

with open('examples/config.json', 'r') as f:
    config = json.load(f)

module_source_tpl = os.environ.get('MODULE_SOURCE_URL', 'git@github.com:getupcloud/getup-modules//modules/{cluster_flavor}/{module_name}?ref={tag}')
tpl_data = {
    'cluster_flavor': cluster_flavor,
    'module_name': module_name,
    'tag': tag,
    'env':os.environ
}
module_source_tpl = eval(f"f'{module_source_tpl}'", tpl_data)

print(f'''
# File auto-generated by {sys.argv[0]} for ${cluster_flavor} cluster

module "{module_name}" {{
  source = "{module_source_tpl}"
'''.strip())
print()

for i, variable in enumerate(hcl.get('variable')):
    for name, content in variable.items():
        if name in config["no_use_var"]:
            #print(f'-> Ignored tfvar: {name}', file=sys.stderr)
            continue
        value = config["map_var"].get(name, f'var.{name}')
        #print(f'-> Mapped var: {name} = {value}', file=sys.stderr)
        print(f'  {name} = {value}')
print('}')
