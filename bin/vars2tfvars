#!/usr/bin/env python

import os
import sys
import json
import hcl2

hcl = hcl2.api.load(sys.stdin)

print(f'# File auto-generated from {sys.argv[0]}')
print()

def sanitize_string(s):
    return s.replace('\'', '"').replace('\n', '\n #')

for i, variable in enumerate(hcl.get('variable')):
    for name, content in variable.items():
        if os.environ.get('IGNORE_{name}'):
            continue

        description = content.get('description')
        data_type = content.get('type')
        has_default, default = 'default' in content, content.get('default')

        if default is None:
            pass
        elif data_type == '${string}':
            default = default # f'"{default}"'
        elif data_type == '${bool}':
            default = bool(default)

        if i:
            print()

        if description is not None:
            print(sanitize_string(f'# {name} - {description}'))

        if data_type is not None:
            print(sanitize_string(f'# Type: {data_type}'))


        if has_default:
            print(sanitize_string(f'# Default: {json.dumps(default)}'))
        else:
            print(f'# Required')

        if has_default:
            print(sanitize_string(f'#{name} = {json.dumps(default)}'))
        else:
            print(f'#{name} = <REQUIRED-VALUE>')

