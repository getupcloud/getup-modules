# File auto-generated by command:
#  bin/make-example \
#    versions \
#    doks \
#    all \
#    v2.0.12 \
#    modules/doks/doks/versions.tf \
#    modules/doks/vpc_peering/versions.tf \
#    modules/doks/flux/versions.tf \
#    modules/doks/velero/versions.tf \
#    modules/doks/loki/versions.tf \
#    modules/doks/tempo/versions.tf

terraform {
  required_version = "~> 1.12"

  # Source: examples/doks/backend.txt
  # Example from https://docs.digitalocean.com/products/spaces/reference/terraform-backend/
  # $ pip3 install s3cmd --user
  #
  # $ s3cmd --configure
  #
  ### Use config below:
  #
  #  Access Key:
  #  Secret Key:
  #  Default Region: US
  #  S3 Endpoint: nyc3.digitaloceanspaces.com                                                                 <<--- change for your region
  #  DNS-style bucket+hostname:port template for accessing a bucket: %(bucket)s.nyc3.digitaloceanspaces.com   <<--- change for your region
  #  Encryption password:                                                                                     <<--- may leave empty
  #  Path to GPG program: /usr/bin/gpg                                                                        <<--- may leave empty
  #  Use HTTPS protocol: True
  #  HTTP Proxy server name:                                                                                  <<-- may leave empty
  #  HTTP Proxy server port: 0
  #
  # $ s3cmd mb s3://CUSTOMER-terraform-state                                                                  <<-- change for desired bucket name

  backend "s3" {
    endpoints = {
      s3 = "https://-- DEFINE REGION HERE --.digitaloceanspaces.com"
    }

    bucket = "-- DEFINE BUCKET NAME HERE --"
    key    = "-- DEFINE KEY PREFIX HERE --/terraform.tfstate"

    # Deactivate a few AWS-specific checks
    skip_credentials_validation = true
    skip_requesting_account_id  = true
    skip_metadata_api_check     = true
    skip_region_validation      = true
    skip_s3_checksum            = true
    region                      = "us-east-1"
  }

  required_providers {
    digitalocean = {
      source  = "digitalocean/digitalocean"
      version = "~> 2.11"
    }

    kubernetes = {
      source  = "hashicorp/kubernetes"
      version = "~> 2.10"
    }

    helm = {
      source  = "hashicorp/helm"
      version = "~> 2.7"
    }

    aws = {
      source  = "hashicorp/aws"
      version = "~> 5.34"
    }

    flux = {
      source  = "fluxcd/flux"
      version = "~> 1.2"
    }

    github = {
      source  = "integrations/github"
      version = "~> 5.18"
    }

    kubectl = {
      source  = "alekc/kubectl"
      version = "~> 2.0"
    }

  }
}
